# This is the config file, and a '#' or ';' character indicates a comment.
# ; 或者 # 都表示注释.

# 自定义 command, `git tree`, `git vtree`
[alias]
	# https://stackoverflow.com/questions/1057564/pretty-git-branch-graphs
	# `$ git log` 是 git 原生命令. https://devhints.io/git-log-format
	# `$ git tree` 自定义命令, 显示缩略信息. 显示的信息有两行，第二行给一个空格, 否则有的行间距会变成2行.
	# %C(xx) - 打印颜色, 256 color
	tree = log --graph --all --format=format:'%C(42)%h%C(reset) -%C(207)%d%C(reset) %C(251)%s%C(reset) %C(243)(%ar)%C(reset)%n'' '
	# `$ git vtree` - 显示详细信息. 一共有三行: 第二行开头的空格数量是固定的, 因为都是 commit hash 宽度固定; 第三行给一个空格.
	vtree = log --date=format:'%d-%b-%Y %H:%M:%S' --graph --all --format=format:'%C(42)%h%C(reset) -%C(207)%d%C(reset) %C(74)%ad%C(reset) %C(243)(%ar) - %C(173)%an%C(reset)%n''          %C(251)%s%C(reset)%n'' '

# diff tool neovim
[difftool "nvimdiff"]
	cmd = nvim -d \"$LOCAL\" \"$REMOTE\"
[difftool]
	prompt = true
[diff]
	# 可以使用 git difftool --tool-help 查看可以使用的 tools.
	# 如果这里缺省设置, 则在执行 `git difftool` 命令时默认会询问是否使用 `vimdiff`.
	# 也可以使用 `git difftool --tool=nvimdiff master..feature/dev` 来指定 difftool.
	tool = nvimdiff
	colorMoved = default

# merge tool neovim
[mergetool "neovim"]
	cmd = nvim -d \"$LOCAL\" \"$MERGED\" \"$BASE\" \"$REMOTE\" -c \"wincmd w\" -c \"wincmd J\"
[mergetool]
	prompt = true
[merge]
	# merge tool 必须设置否则无法使用 git mergetool <...> 命令.
	tool = neovim
	conflictstyle = diff3

# delta diff tool
# https://dandavison.github.io/delta/configuration.html
#[core]
#	pager = delta
#[interactive]
#	diffFilter = delta --color-only
#[delta]
#	navigate = true    # use n and N to move between diff sections
#	light = false      # set to true if you're in a terminal w/ a light background color (e.g. the default macOS terminal)
#	side-by-side = true
#	width = variable
#	features = decorations  # 读取下面的 [delta "decorations"] 设置.
#[delta "decorations"]
#	file-decoration-style="yellow ol"
#	file-style="yellow"
